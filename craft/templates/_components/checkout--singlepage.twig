{% extends "_layouts/standard" %}

{% if createAccount is not defined or createAccount != 'no' %}
{% set createAccount = 'yes' %}
{% endif %}

{% if currentUser %}
{% set createAccount = 'no' %}
{% endif %}
{# quantity, individualPrice #}

{% block content %}
{# Container #}
<div class="simple-container">

	{# Header #}
	<header class="mb-10 pt-9">
		<h1 class="text-lg text-blue mb-6">{{ pageHeader }}</h1>
	</header>

	<div class="form-container choices-as-boxes md:flex md:justify-between">

		{# Form #}
		<section class="form-container --narrow w-full md:w-3/5 mb-8 mb:mb-lg ">

			{# Join Breadcrumbs #}
			<nav class="step-breadcrumbs --circle-counters mb-8 text-sm md:text-md">
				<ul class="list-reset">

					{# Active State: .active #}
					<li id="step-nav-1" class="active account-nav inline-block mr-6 md:mr-8 lg:mr-12 mb-10">
						<span class="name md:ml-16 ml-12 relative">
							Account
						</span>
					</li>

					{# Inactive State: .inactive #}
					<li id="step-nav-2" class="inactive account-nav inline-block mr-6 md:mr-8 lg:mr-12 mb-10">
						<span class="name md:ml-16 ml-12 relative">
							Address
						</span>
					</li>
{% if totalPrice > 0 %}
					{# Default State: -- #}
					<li id="step-nav-3" class="inactive account-nav inline-block mr-6 md:mr-8 lg:mr-12 mb-10">
						<span class="name md:ml-16 ml-12 relative">
							Billing
						</span>
					</li>
					{% endif %}

				</ul>
			</nav>

			{% if totalPrice <= 0 %}

			{% set message = craft.session.getFlash('error') %}
			{{message}}

			<form class="form-horizontal" id="charge-form" method="post" accept-charset="UTF-8">
				{{ getCsrfInput() }}
				{{ forms.hidden({ name : 'action', value: 'weat/saveEvent' }) }}
				{{ forms.hidden({ name : 'redirect', value: 'payments/register-thank-you' }) }}
				{{ forms.hidden({ name : 'fields[chargeType]', value: 'registration' }) }}
				{{ forms.hidden({ name : 'customerName', value: '', id: 'hiddenName' }) }}
				{{ forms.hidden({ name : 'meta[quantity]', value: quantity }) }}
				{{ forms.hidden({ name : 'meta[individualPrice]', value: individualPrice }) }}
				{{ forms.hidden({ name : 'checkoutRequest', value: true }) }}

				{{block('meta')}}

				{% if allErrors is defined %}
					{{ forms.errorBlock(allErrors) }}
				{% endif %}

				<div id="payment-errors" class="alert alert-error"></div>

				<div id="step-1" class="step-container">

					{% if not currentUser %}
					{# Field #}
					<div class="form-row mb-12 items-center">
						{% if pageHeader == 'Join WEAT' %}
							<p>Already have an account? <a href="{{ url('members/login', 'returnUrl=join') }}">Login here</a></p>
						{% elseif eventId is defined and item is defined and quantity is defined %}
							<h3>Already have an account or looking for WEAT Member Pricing? <a href="{{ url('members/login', 'returnUrl=payments/checkout&eventId=' ~ eventId ~ '&item=' ~ item ~ '&quantity=' ~ quantity) }}">Login here</a></h3>
						{% else %}
							<h3>Already have an account or looking for WEAT Member Pricing? <a href="{{ url('members/login') }}">Login here</a></h3>
						{% endif %}
					</div>
					{% endif %}

					<div class="form-row mb-6 flex justify-center items-center -mx-4">
						{# Field #}
						<div class="w-1/2 px-4">
							<label for="meta[firstName]" class="field-label block w-full">First Name</label>
							<input required name="meta[firstName]" id="firstName" type="text" class="input-field block w-full pageRequired" placeholder="Your First Name" value="{{charge is defined and charge.user ? charge.user.firstName : (currentUser ? currentUser.firstName : '')}}">
						</div>

						{# Field #}
						<div class="w-1/2 px-4">
							<label for="meta[lastName]" class="field-label block w-full">Last Name</label>
							<input required name="meta[lastName]" id="lastName" type="text" class="input-field block w-full pageRequired" placeholder="Your Last Name" value="{{charge is defined and charge.user ? charge.user.lastName : (currentUser ? currentUser.lastName : '')}}">
						</div>
					</div>

					{# Field #}
					<div class="form-row mb-6">
						<label for="meta[customerEmail]" class="field-label block w-full">Email</label>
						<input required name="meta[customerEmail]" id="customerEmail" type="email" class="input-field block w-full pageRequired" placeholder="hello@mail.com" value="{{charge is defined ? charge.customerEmail : (currentUser ? currentUser.email : '')}}">
					</div>

					{# Field #}
					<div class="form-row mb-6">
						<label for="meta[userPhoneNumber]" class="field-label block w-full">Phone Number</label>
						<input name="meta[userPhoneNumber]" id="userPhoneNumber" type="text" class="input-field --phone-number block w-full" placeholder="***-**-****" value="{{charge is defined ? charge.meta.userPhoneNumber : (currentUser ? currentUser.userPhoneNumber : '')}}">
					</div>

					{# Field #}
					<div class="form-row mb-6">
						<label for="meta[userCompanyName]" class="field-label block w-full">Company Name</label>
						<input name="meta[userCompanyName]" id="userCompanyName" type="text" class="input-field block w-full" placeholder="" value="{{charge is defined ? charge.meta.userCompanyName : (currentUser ? currentUser.userCompanyName : '')}}">
					</div>

					{% if not currentUser and createAccount == 'yes' %}
					{# Field #}
					<div class="form-row mb-6">
						<label for="password" class="field-label block w-full">Password</label>
						<input required name="password" id="password" type="password" class="input-field block w-full">
					</div>
					{% endif %}

					{% if not currentUser %}
					{# Field #}
					<div class="form-row mb-6">
						<label for="meta[newsletter]" class="check-radio-input block w-full text-sm flex items-center">
							<input type="checkbox" name="meta[newsletter]" id="meta[newsletter]" value="on" class="check-radio__input" checked>
							{{svg.icon('icon --md text-green', 'checkmark')}}
							<span class="check-radio__label inline-block ml-3  cursor-pointer">Sign up for our newsletter?</span>
						</label>
					</div>
					{% endif %}

					<div class="form-row mb-6 flex justify-center items-center -mx-4">
						{# Field #}
						<div class="w-1/2 px-4">
						</div>
						{# Field #}
						<div class="w-1/2 px-4">
							<input class="next submit btn --auto-w --full-w" type="button" value="Next">
						</div>
					</div>
				</div>

				<div id="step-2" class="step-container" style="display:none">

					{# Address #}
					<div class="form-row mb-6">
						<label for="meta[addressLine1]" class="field-label block w-full">Street Address</label>
						<input required name="meta[addressLine1]" id="addressLine1" type="text" class="input-field block w-full" placeholder="Street Address" value="{{charge is defined ? charge.meta.addressLine1 : (currentUser ? currentUser.userAddress1 : '')}}">
					</div>

						{# Address #}
						<div class="form-row mb-6">
							<label for="meta[addressLine2]" class="field-label block w-full">Street Address 2</label>
							<input name="meta[addressLine2]" id="addressLine2" type="text" class="input-field block w-full" placeholder="Suite" value="{{charge is defined ? charge.meta.addressLine2 : (currentUser ? currentUser.userAddress2 : '')}}">
						</div>

					{# Split Fields: City & State #}
					<div class="form-row mb-6 flex justify-between items-center -mx-4">

						<div class="w-1/2 px-4">
							<label for="meta[addressCity]" class="field-label block w-full">City</label>
							<input required name="meta[addressCity]" id="city" type="text" class="input-field block w-full" placeholder="City" value="{{charge is defined ? charge.meta.addressCity : (currentUser ? currentUser.userAddressCity : '')}}">
						</div>

						<div class="w-1/2 px-4">
							<label for="meta[addressState]" class="field-label block w-full">State</label>
							<select name="meta[addressState]" id="state" data-module="choices">
								<option value="AL">Alabama</option>
								<option value="AK">Alaska</option>
								<option value="AZ">Arizona</option>
								<option value="AR">Arkansas</option>
								<option value="CA">California</option>
								<option value="CO">Colorado</option>
								<option value="CT">Connecticut</option>
								<option value="DE">Delaware</option>
								<option value="DC">District Of Columbia</option>
								<option value="FL">Florida</option>
								<option value="GA">Georgia</option>
								<option value="HI">Hawaii</option>
								<option value="ID">Idaho</option>
								<option value="IL">Illinois</option>
								<option value="IN">Indiana</option>
								<option value="IA">Iowa</option>
								<option value="KS">Kansas</option>
								<option value="KY">Kentucky</option>
								<option value="LA">Louisiana</option>
								<option value="ME">Maine</option>
								<option value="MD">Maryland</option>
								<option value="MA">Massachusetts</option>
								<option value="MI">Michigan</option>
								<option value="MN">Minnesota</option>
								<option value="MS">Mississippi</option>
								<option value="MO">Missouri</option>
								<option value="MT">Montana</option>
								<option value="NE">Nebraska</option>
								<option value="NV">Nevada</option>
								<option value="NH">New Hampshire</option>
								<option value="NJ">New Jersey</option>
								<option value="NM">New Mexico</option>
								<option value="NY">New York</option>
								<option value="NC">North Carolina</option>
								<option value="ND">North Dakota</option>
								<option value="OH">Ohio</option>
								<option value="OK">Oklahoma</option>
								<option value="OR">Oregon</option>
								<option value="PA">Pennsylvania</option>
								<option value="RI">Rhode Island</option>
								<option value="SC">South Carolina</option>
								<option value="SD">South Dakota</option>
								<option value="TN">Tennessee</option>
								<option value="TX" selected="selected">Texas</option>
								<option value="UT">Utah</option>
								<option value="VT">Vermont</option>
								<option value="VA">Virginia</option>
								<option value="WA">Washington</option>
								<option value="WV">West Virginia</option>
								<option value="WI">Wisconsin</option>
								<option value="WY">Wyoming</option>
							</select>
						</div>
					</div>

					{# Zipcode #}
					<div class="form-row mb-6 flex justify-between items-center -mx-4">

						<div class="w-1/2 px-4">
							<label for="meta[addressZip]" class="field-label block w-full">Zipcode</label>
							<input required name="meta[addressZip]" id="zipcode" type="text" class="input-field block w-full" placeholder="Zipcode" value="{{charge is defined ? charge.meta.addressZip : (currentUser ? currentUser.userAddressZip : '')}}">
						</div>
					</div>

					<div class="form-row mb-6 flex justify-center items-center -mx-4">
						{# Field #}
						<div class="w-1/2 px-4">
							<input class="prev submit btn --auto-w --full-w" type="button" value="Previous">
						</div>
						{# Field #}
						<div class="w-1/2 px-4">
							<input class="submit btn --auto-w --full-w" type="submit" value="Checkout">
						</div>
					</div>
				</div>

		</form>


		{% includeJsFile '/assets/static/validate/jquery.validate.min.js' %}
		{% set formJs %}

		(function () {
			//var validator = $('form#charge-form').validate();
			var $step1 = $('#step-1');
			var $step2 = $('#step-2');
			$step2.hide();

			var $firstName = $('#firstName');
			var $lastName = $('#lastName');
			var $hiddenName = $('#hiddenName');


						var current = 0;

						$.validator.addMethod("pageRequired", function(value, element) {
							var $element = $(element)

								function match(index) {
									return current == index && $(element).parents("#step-" + (index + 1)).length;
								}
							if (match(0) || match(1) || match(2)) {
								return !this.optional(element);
							}
							return "dependency-mismatch";
						}, $.validator.messages.required)

						var v = $('form#charge-form').validate({
							errorClass: "warning",
							onkeyup: false,
							onfocusout: false
						});

						// back buttons do not need to run validation

						$step2.find('.prev').click(function() {
							$('.step-container').hide();
							$('.account-nav').removeClass('active').addClass('inactive');
							$('#step-nav-1').removeClass('inactive').addClass('active');
							$step1.show();
							current = 0;
						});

						// these buttons all run the validation, overridden by specific targets above
						$step1.find('.next').click(function() {
							if (v.form()) {
								$('.step-container').hide();
								$('.account-nav').removeClass('active').addClass('inactive');
								$('#step-nav-2').removeClass('inactive').addClass('active');
								$step2.show();
								$hiddenName.val($firstName.val() + ' ' + $lastName.val());
								current = 1;
							}
						});

				})();
		{% endset %}
		{% includeJs formJs %}
























			{% else %}

				<form class="form-horizontal" id="charge-form" method="post" accept-charset="UTF-8">
					{{ getCsrfInput() }}
					{{ forms.hidden({ name : 'action', value: 'charge/charge' }) }}
					{{ forms.hidden({ name : 'redirect', value: 'payments/thanks/{hash}' }) }}
					{{ forms.hidden({ name : 'createAccount', value: createAccount }) }}
					{{ forms.hidden({ name : 'fields[chargeType]', value: 'registration' }) }}
					{{ forms.hidden({ name : 'customerName', value: '', id: 'hiddenName' }) }}
					{{ forms.hidden({ name : 'meta[quantity]', value: quantity }) }}
					{{ forms.hidden({ name : 'meta[individualPrice]', value: individualPrice }) }}
					{{ forms.hidden({ name : 'checkoutRequest', value: true }) }}

					{% block meta %}{% endblock %}

					{% if allErrors is defined %}
						{{ forms.errorBlock(allErrors) }}
					{% endif %}

					<div id="payment-errors" class="alert alert-error"></div>

					<div id="step-1" class="step-container">

						{% if not currentUser %}
						{# Field #}
						<div class="form-row mb-12 items-center">
							{% if pageHeader == 'Join WEAT' %}
								<p>Already have an account? <a href="{{ url('members/login', 'returnUrl=join') }}">Login here</a></p>
							{% elseif eventId is defined and item is defined and quantity is defined %}
								<h3>Already have an account or looking for WEAT Member Pricing? <a href="{{ url('members/login', 'returnUrl=payments/checkout&eventId=' ~ eventId ~ '&item=' ~ item ~ '&quantity=' ~ quantity) }}">Login here</a></h3>
							{% else %}
								<h3>Already have an account or looking for WEAT Member Pricing? <a href="{{ url('members/login') }}">Login here</a></h3>
							{% endif %}
						</div>
						{% endif %}

						<div class="form-row mb-6 flex justify-center items-center -mx-4">
							{# Field #}
							<div class="w-1/2 px-4">
								<label for="firstName" class="field-label block w-full">First Name</label>
								<input required name="firstName" id="firstName" type="text" class="input-field block w-full pageRequired" placeholder="Your First Name" value="{{charge is defined and charge.user ? charge.user.firstName : (currentUser ? currentUser.firstName : craft.request.getPost('firstName'))}}">
							</div>

							{# Field #}
							<div class="w-1/2 px-4">
								<label for="lastName" class="field-label block w-full">Last Name</label>
								<input required name="lastName" id="lastName" type="text" class="input-field block w-full pageRequired" placeholder="Your Last Name" value="{{charge is defined and charge.user ? charge.user.lastName : (currentUser ? currentUser.lastName : craft.request.getPost('lastName'))}}">
							</div>
						</div>

						{# Field #}
						<div class="form-row mb-6">
							<label for="customerEmail" class="field-label block w-full">Email</label>
							<input required name="customerEmail" id="customerEmail" type="email" class="input-field block w-full pageRequired" placeholder="hello@mail.com" value="{{charge is defined ? charge.customerEmail : (currentUser ? currentUser.email : '')}}">
						</div>

						{# Field #}
						<div class="form-row mb-6">
							<label for="meta[userPhoneNumber]" class="field-label block w-full">Phone Number</label>
							<input name="meta[userPhoneNumber]" id="userPhoneNumber" type="text" class="input-field --phone-number block w-full" placeholder="***-**-****" value="{{charge is defined ? charge.meta.userPhoneNumber : (currentUser ? currentUser.userPhoneNumber : '')}}">
						</div>

						{# Field #}
						<div class="form-row mb-6">
							<label for="meta[userCompanyName]" class="field-label block w-full">Company Name</label>
							<input name="meta[userCompanyName]" id="userCompanyName" type="text" class="input-field block w-full" placeholder="" value="{{charge is defined ? charge.meta.userCompanyName : (currentUser ? currentUser.userCompanyName : '')}}">
						</div>

						{% if not currentUser and createAccount == 'yes' %}
						{# Field #}
						<div class="form-row mb-6">
							<label for="password" class="field-label block w-full">Password</label>
							<input required name="password" id="password" type="password" class="input-field block w-full">
						</div>
						{% endif %}

						{% if not currentUser %}
						{# Field #}
						<div class="form-row mb-6">
							<label for="meta[newsletter]" class="check-radio-input block w-full text-sm flex items-center">
								<input type="checkbox" name="meta[newsletter]" id="meta[newsletter]" value="on" class="check-radio__input" checked>
								{{svg.icon('icon --md text-green', 'checkmark')}}
								<span class="check-radio__label inline-block ml-3  cursor-pointer">Sign up for our newsletter?</span>
							</label>
						</div>
						{% endif %}

						<div class="form-row mb-6 flex justify-center items-center -mx-4">
							{# Field #}
							<div class="w-1/2 px-4">
							</div>
							{# Field #}
							<div class="w-1/2 px-4">
								<input class="next submit btn --auto-w --full-w" type="button" value="Next">
							</div>
						</div>
					</div>

					<div id="step-2" class="step-container" style="display:none">

						{# Address #}
						<div class="form-row mb-6">
							<label for="meta[addressLine1]" class="field-label block w-full">Street Address</label>
							<input required name="meta[addressLine1]" id="addressLine1" type="text" class="input-field block w-full" placeholder="Street Address" value="{{charge is defined ? charge.meta.addressLine1 : (currentUser ? currentUser.userAddress1 : '')}}">
						</div>

							{# Address #}
							<div class="form-row mb-6">
								<label for="meta[addressLine2]" class="field-label block w-full">Street Address 2</label>
								<input name="meta[addressLine2]" id="addressLine2" type="text" class="input-field block w-full" placeholder="Suite" value="{{charge is defined ? charge.meta.addressLine2 : (currentUser ? currentUser.userAddress2 : '')}}">
							</div>

						{# Split Fields: City & State #}
						<div class="form-row mb-6 flex justify-between items-center -mx-4">

							<div class="w-1/2 px-4">
								<label for="meta[addressCity]" class="field-label block w-full">City</label>
								<input required name="meta[addressCity]" id="city" type="text" class="input-field block w-full" placeholder="City" value="{{charge is defined ? charge.meta.addressCity : (currentUser ? currentUser.userAddressCity : '')}}">
							</div>

							<div class="w-1/2 px-4">
								<label for="meta[addressState]" class="field-label block w-full">State</label>
								<select name="meta[addressState]" id="state" data-module="choices">
									<option value="AL">Alabama</option>
									<option value="AK">Alaska</option>
									<option value="AZ">Arizona</option>
									<option value="AR">Arkansas</option>
									<option value="CA">California</option>
									<option value="CO">Colorado</option>
									<option value="CT">Connecticut</option>
									<option value="DE">Delaware</option>
									<option value="DC">District Of Columbia</option>
									<option value="FL">Florida</option>
									<option value="GA">Georgia</option>
									<option value="HI">Hawaii</option>
									<option value="ID">Idaho</option>
									<option value="IL">Illinois</option>
									<option value="IN">Indiana</option>
									<option value="IA">Iowa</option>
									<option value="KS">Kansas</option>
									<option value="KY">Kentucky</option>
									<option value="LA">Louisiana</option>
									<option value="ME">Maine</option>
									<option value="MD">Maryland</option>
									<option value="MA">Massachusetts</option>
									<option value="MI">Michigan</option>
									<option value="MN">Minnesota</option>
									<option value="MS">Mississippi</option>
									<option value="MO">Missouri</option>
									<option value="MT">Montana</option>
									<option value="NE">Nebraska</option>
									<option value="NV">Nevada</option>
									<option value="NH">New Hampshire</option>
									<option value="NJ">New Jersey</option>
									<option value="NM">New Mexico</option>
									<option value="NY">New York</option>
									<option value="NC">North Carolina</option>
									<option value="ND">North Dakota</option>
									<option value="OH">Ohio</option>
									<option value="OK">Oklahoma</option>
									<option value="OR">Oregon</option>
									<option value="PA">Pennsylvania</option>
									<option value="RI">Rhode Island</option>
									<option value="SC">South Carolina</option>
									<option value="SD">South Dakota</option>
									<option value="TN">Tennessee</option>
									<option value="TX" selected="selected">Texas</option>
									<option value="UT">Utah</option>
									<option value="VT">Vermont</option>
									<option value="VA">Virginia</option>
									<option value="WA">Washington</option>
									<option value="WV">West Virginia</option>
									<option value="WI">Wisconsin</option>
									<option value="WY">Wyoming</option>
								</select>
							</div>
						</div>

						{# Zipcode #}
						<div class="form-row mb-6 flex justify-between items-center -mx-4">

							<div class="w-1/2 px-4">
								<label for="meta[addressZip]" class="field-label block w-full">Zipcode</label>
								<input required name="meta[addressZip]" id="zipcode" type="text" class="input-field block w-full" placeholder="Zipcode" value="{{charge is defined ? charge.meta.addressZip : (currentUser ? currentUser.userAddressZip : '')}}">
							</div>
						</div>

						<div class="form-row mb-6 flex justify-center items-center -mx-4">
							{# Field #}
							<div class="w-1/2 px-4">
								<input class="prev submit btn --auto-w --full-w" type="button" value="Previous">
							</div>
							{# Field #}
							<div class="w-1/2 px-4">
								<input class="next submit btn --auto-w --full-w" type="button" value="Next">
							</div>
						</div>
					</div>

					<div id="step-3" class="step-container" style="display:none;">

						{{ craft.charge.setPaymentOptions(options) }}

						<div class="form-row mb-6">
							<label for="card-element" class="field-label block w-full">Credit or debit card</label>
							<div id="card-element" class="input-field">
								<!-- a Stripe Element will be inserted here. -->
							</div>
							<!-- Used to display form errors -->
							<div id="card-errors" role="alert"></div>
						</div>

							{# Buttons #}
							<div class="form-row mb-6 flex justify-center items-center -mx-4">
								{# Field #}
								<div class="w-1/2 px-4">
									<input class="prev submit btn --auto-w --full-w" type="button" value="Previous">
								</div>
								{# Field #}
								<div class="w-1/2 px-4">
									<input class="submit btn --auto-w --full-w" type="submit" value="Checkout">
								</div>
							</div>

						</div>


			</form>


			{% includeJsFile 'https://js.stripe.com/v3/' %}
			{% includeJsFile '/assets/static/validate/jquery.validate.min.js' %}
			{% set formJsCharge %}
			// Create a Stripe client.
			var stripe = Stripe('{{ craft.charge.getPublicKey }}');

			// Create an instance of Elements.
			var elements = stripe.elements();

			// Custom styling can be passed to options when creating an Element.
			// (Note that this demo uses a wider set of styles than the guide below.)
			var style = {
			  base: {
			    color: '#32325d',
			    lineHeight: '18px',
			    fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
			    fontSmoothing: 'antialiased',
			    fontSize: '16px',
			    '::placeholder': {
			      color: '#aab7c4'
			    }
			  },
			  invalid: {
			    color: '#fa755a',
			    iconColor: '#fa755a'
			  }
			};

			// Create an instance of the card Element.
			var card = elements.create('card', {style: style});

			// Add an instance of the card Element into the `card-element` <div>.
			card.mount('#card-element');

			// Handle real-time validation errors from the card Element.
			card.addEventListener('change', function(event) {
			  var displayError = document.getElementById('card-errors');
			  if (event.error) {
			    displayError.textContent = event.error.message;
			  } else {
			    displayError.textContent = '';
			  }
			});

			// Handle form submission.
			var form = document.getElementById('charge-form');
			form.addEventListener('submit', function(event) {
			  event.preventDefault();

			  stripe.createToken(card).then(function(result) {
			    if (result.error) {
			      // Inform the user if there was an error.
			      var errorElement = document.getElementById('card-errors');
			      errorElement.textContent = result.error.message;
			    } else {
			      // Send the token to your server.
			      stripeTokenHandler(result.token);
			    }
			  });
			});

			function stripeTokenHandler(token) {
			  // Insert the token ID into the form so it gets submitted to the server
			  var form = document.getElementById('charge-form');
			  var hiddenInput = document.createElement('input');
			  hiddenInput.setAttribute('type', 'hidden');
			  hiddenInput.setAttribute('name', 'stripeToken');
			  hiddenInput.setAttribute('value', token.id);
			  form.appendChild(hiddenInput);
			  var hiddenInput2 = document.createElement('input');
			  hiddenInput2.setAttribute('type', 'hidden');
			  hiddenInput2.setAttribute('name', 'stripeEmail');
			  hiddenInput2.setAttribute('value', document.getElementById('customerEmail').value);
			  form.appendChild(hiddenInput2);

			  // Submit the form
			  form.submit();
			}
			(function () {
				//$(this).charge();
				//var validator = $('form#charge-form').validate();
				var $step1 = $('#step-1');
				var $step2 = $('#step-2');
				var $step3 = $('#step-3');
				$step2.hide();
				$step3.hide();

				var $firstName = $('#firstName');
				var $lastName = $('#lastName');
				var $hiddenName = $('#hiddenName');


							var current = 0;

							$.validator.addMethod("pageRequired", function(value, element) {
								var $element = $(element)

									function match(index) {
										return current == index && $(element).parents("#step-" + (index + 1)).length;
									}
								if (match(0) || match(1) || match(2)) {
									return !this.optional(element);
								}
								return "dependency-mismatch";
							}, $.validator.messages.required)

							var v = $('form#charge-form').validate({
								errorClass: "warning",
								onkeyup: false,
								onfocusout: false
							});

							// back buttons do not need to run validation

							$step2.find('.prev').click(function() {
								$('.step-container').hide();
								$('.account-nav').removeClass('active').addClass('inactive');
								$('#step-nav-1').removeClass('inactive').addClass('active');
								$step1.show();
								current = 0;
							});
							$step3.find('.prev').click(function() {
								$('.step-container').hide();
								$('.account-nav').removeClass('active').addClass('inactive');
								$('#step-nav-2').removeClass('inactive').addClass('active');
								$step2.show();
								current = 1;
							});

							// these buttons all run the validation, overridden by specific targets above
							$step1.find('.next').click(function() {
								if (v.form()) {
									$('.step-container').hide();
									$('.account-nav').removeClass('active').addClass('inactive');
									$('#step-nav-2').removeClass('inactive').addClass('active');
									$step2.show();
									$hiddenName.val($firstName.val() + ' ' + $lastName.val());
									current = 1;
								}
							});
							$step2.find('.next').click(function() {
								if (v.form()) {
									$('.step-container').hide();
									$('.account-nav').removeClass('active').addClass('inactive');
									$('#step-nav-3').removeClass('inactive').addClass('active');
									$step3.show();
									current = 2;
								}
							});
							/*$(".open-1").click(function() {
								if (v.form()) {
									//accordion.accordion("option", "active", 0);
									current = 0;
								}
							});*/
			/*			});



							$('#step-account-next').on('click', function() {

								validator.element($stepAccount)({
									success: function() {
										$('.step-container').hide();
										$('.account-nav').removeClass('active').addClass('inactive');
										$('#step-address-nav').removeClass('inactive').addClass('active');
										$stepAddress.show();
									}
								});
							});
							$('#step-address-next').on('click', function() {
								$('.step-container').hide();
								$('.account-nav').removeClass('active').addClass('inactive');
								$('#step-billing-nav').removeClass('inactive').addClass('active');
								$stepBilling.show();
							});*/
					})();
			{% endset %}
			{% includeJs formJsCharge %}
		{% endif %}
	</section>

	{# Aside #}
	<aside class="form-aside w-full md:w-2/5 md:mb-0 mb-lg md:pl-8 px-6 md:px-0 ">
		{% include '_components/checkout--summary.twig' %}
	</aside>

</div>

</div>


{% endblock %}
